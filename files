// lib/types.ts
export type Product = {
id: string
name: string
price: number
image: string
category?: string
}

export type CartItem = {
id: string
name: string
price: number
image: string
quantity: number
}

// lib/products.ts
import type { Product } from "./types"

export const products: Product[] = [
{
  id: "waffle-berries",
  name: "Waffle with Berries",
  category: "Waffle",
  price: 6.5,
  image: "/placeholder.svg?height=320&width=420",
},
{
  id: "creme-brulee",
  name: "Vanilla Bean Crème Brûlée",
  category: "Crème Brûlée",
  price: 7.0,
  image: "/placeholder.svg?height=320&width=420",
},
{
  id: "macaron-mix",
  name: "Macaron Mix of Five",
  category: "Macaron",
  price: 8.0,
  image: "/placeholder.svg?height=320&width=420",
},
{
  id: "tiramisu-classic",
  name: "Classic Tiramisu",
  category: "Tiramisu",
  price: 5.5,
  image: "/placeholder.svg?height=320&width=420",
},
{
  id: "baklava-pistachio",
  name: "Pistachio Baklava",
  category: "Baklava",
  price: 4.0,
  image: "/placeholder.svg?height=320&width=420",
},
{
  id: "lemon-meringue-pie",
  name: "Lemon Meringue Pie",
  category: "Pie",
  price: 5.0,
  image: "/placeholder.svg?height=320&width=420",
},
{
  id: "cake-red-velvet",
  name: "Red Velvet Cake",
  category: "Cake",
  price: 4.5,
  image: "/placeholder.svg?height=320&width=420",
},
{
  id: "brownie-salted-caramel",
  name: "Salted Caramel Brownie",
  category: "Brownie",
  price: 5.5,
  image: "/placeholder.svg?height=320&width=420",
},
{
  id: "panna-cotta-vanilla",
  name: "Vanilla Panna Cotta",
  category: "Panna Cotta",
  price: 6.5,
  image: "/placeholder.svg?height=320&width=420",
},
]

// components/product-card.tsx
"use client"

import Image from "next/image"
import { ShoppingCart } from 'lucide-react'
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardFooter, CardHeader } from "@/components/ui/card"
import type { Product } from "@/lib/types"
import { formatCurrency } from "@/lib/format"
import { useCart } from "./cart-provider"

type Props = {
product?: Product
}

const fallbackProduct: Product = {
id: "sample",
name: "Sample Dessert",
price: 0,
image: "/placeholder.svg?height=320&width=420",
category: "Dessert",
}

export default function ProductCard({ product = fallbackProduct }: Props = { product: fallbackProduct }) {
const { addItem } = useCart()

return (
  <Card className="overflow-hidden bg-white shadow-sm">
    <CardHeader className="p-0">
      <div className="relative w-full aspect-[4/3]">
        <Image
          src={product.image || "/placeholder.svg?height=320&width=420&query=dessert%20photo"}
          alt={product.name}
          fill
          sizes="(min-width: 1280px) 370px, (min-width: 1024px) 33vw, (min-width: 640px) 50vw, 100vw"
          className="object-cover"
        />
      </div>
    </CardHeader>
    <CardContent className="pt-4">
      {product.category && <p className="text-xs text-stone-500">{product.category}</p>}
      <h3 className="mt-1 font-semibold text-stone-900">{product.name}</h3>
      <p className="mt-1 text-sm font-semibold text-orange-600">{formatCurrency(product.price)}</p>
    </CardContent>
    <CardFooter className="pt-2 pb-5">
      <Button
        onClick={() => addItem(product, 1)}
        className="w-full justify-center gap-2 rounded-full border border-orange-600 bg-white text-orange-700 hover:bg-orange-50"
        variant="outline"
      >
        <ShoppingCart className="h-4 w-4" aria-hidden="true" />
        <span>Add to Cart</span>
      </Button>
    </CardFooter>
  </Card>
)
}

// components/client-page.tsx
"use client"

import type { Product } from "@/lib/types"
import { CartProvider } from "./cart-provider"
import ProductList from "./product-list"
import CartAside from "./cart-aside"
import CartButton from "./cart-button"

type ClientPageProps = {
products?: Product[]
}

const defaultProps: Required<ClientPageProps> = {
products: [],
}

export default function ClientPage(props: ClientPageProps = defaultProps) {
const { products } = { ...defaultProps, ...props }

return (
  <CartProvider>
    <main className="min-h-screen bg-[#fff7f2]">
      <header className="bg-[#fff7f2]">
        <div className="container mx-auto px-4 py-8 flex items-center gap-4">
          <h1 className="text-3xl sm:text-4xl font-extrabold tracking-tight text-stone-800">Desserts</h1>
          <div className="ml-auto lg:hidden">
            <CartButton />
          </div>
        </div>
      </header>

      <section className="container mx-auto px-4 pb-12">
        <div className="grid gap-8 lg:grid-cols-12">
          <div className="lg:col-span-8 xl:col-span-9">
            <ProductList products={products} />
          </div>
          <aside className="hidden lg:block lg:col-span-4 xl:col-span-3">
            <CartAside />
          </aside>
        </div>
      </section>
    </main>
  </CartProvider>
)
}

// components/cart-aside.tsx
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { useCart } from "./cart-provider"
import CartItem from "./cart-item"

export default function CartAside() {
const { items, count, total } = useCart()

return (
  <Card className="bg-white shadow-sm">
    <CardHeader className="p-4">
      <CardTitle className="text-xl text-orange-600">Your Cart ({count})</CardTitle>
    </CardHeader>
    <CardContent className="p-4">
      {items.map((item) => (
        <CartItem key={item.id} item={item} />
      ))}
    </CardContent>
    <CardFooter className="p-4">
      <p className="text-sm font-semibold text-stone-900">Total: {total}</p>
    </CardFooter>
  </Card>
)
}
